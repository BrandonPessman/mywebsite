{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpessman/Development/personal-website/src/components/Pages/Post.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\nconst ReactMarkdown = require('react-markdown');\n\nexport default function Post() {\n  const [author, setAuthor] = useState('');\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState([]);\n  const [postId, setPostId] = useState('');\n  const [date, setDate] = useState('');\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios.get('http://localhost:8081/posts/' + id).then(function (response) {\n      // handle success\n      let data = response.data[0];\n      setAuthor(data.author);\n      setTitle(data.title);\n      setBody(data.body);\n      setPostId(data._id);\n      var ts = new Date(data.date);\n      setDate(ts.toDateString());\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).finally(function () {// always executed\n    });\n  }, [id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, title.toUpperCase()), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, date))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/brandonpessman/Development/personal-website/src/components/Pages/Post.js"],"names":["React","useState","useEffect","useParams","axios","Jumbotron","Container","ReactMarkdown","require","Post","author","setAuthor","title","setTitle","body","setBody","postId","setPostId","date","setDate","id","get","then","response","data","_id","ts","Date","toDateString","catch","error","console","log","finally","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AAEA,eAAe,SAASC,IAAT,GAAiB;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AAEA,MAAI;AAAEmB,IAAAA;AAAF,MAASjB,SAAS,EAAtB;AAEAD,EAAAA,SAAS,CACP,MAAM;AACJE,IAAAA,KAAK,CACFiB,GADH,CACO,iCAAiCD,EADxC,EAEGE,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB;AACA,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAX;AACAb,MAAAA,SAAS,CAACa,IAAI,CAACd,MAAN,CAAT;AACAG,MAAAA,QAAQ,CAACW,IAAI,CAACZ,KAAN,CAAR;AACAG,MAAAA,OAAO,CAACS,IAAI,CAACV,IAAN,CAAP;AACAG,MAAAA,SAAS,CAACO,IAAI,CAACC,GAAN,CAAT;AACA,UAAIC,EAAE,GAAG,IAAIC,IAAJ,CAASH,IAAI,CAACN,IAAd,CAAT;AACAC,MAAAA,OAAO,CAACO,EAAE,CAACE,YAAH,EAAD,CAAP;AACD,KAXH,EAYGC,KAZH,CAYS,UAAUC,KAAV,EAAiB;AACtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAfH,EAgBGG,OAhBH,CAgBW,YAAY,CACnB;AACD,KAlBH;AAmBD,GArBM,EAsBP,CAACb,EAAD,CAtBO,CAAT;AAyBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAK,CAACsB,WAAN,EAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,IAAL,CAFF,CADF,CADF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEJ,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAPF,CADF;AAaD","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nconst ReactMarkdown = require('react-markdown')\n\nexport default function Post () {\n  const [author, setAuthor] = useState('')\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState([])\n  const [postId, setPostId] = useState('')\n  const [date, setDate] = useState('')\n\n  let { id } = useParams()\n\n  useEffect(\n    () => {\n      axios\n        .get('http://localhost:8081/posts/' + id)\n        .then(function (response) {\n          // handle success\n          let data = response.data[0]\n          setAuthor(data.author)\n          setTitle(data.title)\n          setBody(data.body)\n          setPostId(data._id)\n          var ts = new Date(data.date)\n          setDate(ts.toDateString())\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error)\n        })\n        .finally(function () {\n          // always executed\n        })\n    },\n    [id]\n  )\n\n  return (\n    <div>\n      <Jumbotron>\n        <center>\n          <h1>{title.toUpperCase()}</h1>\n          <h5>{date}</h5>\n        </center>\n      </Jumbotron>\n      <Container>\n      <ReactMarkdown source={body} />\n      </Container>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}